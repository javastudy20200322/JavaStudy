package summary.haesung.practice.chapter06.example10;

public class Example10 {

	public static void main(String[] args)
	{
		// 6-10
		// b.생성자는 객체를 초기화할 목적으로 사용. 객체를 생성하는 것은 new 연산자.
		// e.생성자는 오버로딩이 가능하다.
		// - 생성자 오버로딩 : 같은 이름으로 여러개의 생성자를 만드는 것.
		
		// 6-11
		// b.this는 클래스의 인스턴스 메소드 내에서만 사용이 가능하다. static이 붙은 곳에서는 사용할 수 없다.
		
		// 6-12
		// c.리턴타입은 오버로딩과 상관없다.
		// d.매개변수의 이름은 오버로딩과 상관없다.
		
		// 6-13
		// a.매개변수의 이름은 오버로딩과 상관없다.
		// b.c.d. 모두 매개변수의 타입이 다르므로 올바른 오버로딩이다.
		
		// 6-14
		// c.생성자보다 초기화블럭이 먼저 수행된다.
		// e.인스턴스변수보다 클래스변수가 먼저 초기화된다.
		// - 명시적초기화란 변수의 선언과 동시에 초기화하는것. 초기화 방법 중에서 가장 우선적으로 고려되어야 한다.
		
		// 6-15
		// 인스턴스변수의 초기화 순서 : 기본값-명시적초기화-초기화블럭-생성자
		
		// 6-16
		// a.지역변수도 초기화가 필요하다.
		// heap영역에는 인스턴스변수가 생성되는 영역이며, 지역변수는 호출스택(call stack)에 생성된다.
		
		// 6-17
		// b.모두 실행중이다.
		
		// 6-18
		// A.static변수의 초기화는 static이 아닌 변수로 할 수 없다.
		// B.static메소드에서 static이 아닌 변수를 사용할 수 없다.
		// C.static메소드에서 static이 아닌 메소드를 호출할 수 없다.
		
	}

}
